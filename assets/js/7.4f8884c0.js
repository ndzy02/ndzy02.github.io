(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{842:function(t,i,e){"use strict";e.r(i);var a=e(70),r=Object(a.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"basics-基本操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basics-基本操作"}},[t._v("#")]),t._v(" basics 基本操作")]),t._v(" "),e("p",[e("code",[t._v("git init <directory>")]),t._v(" 初始化仓库 eg: git init 将当前文件夹初始化为 git 仓库")]),t._v(" "),e("p",[e("code",[t._v("git clone <repo>")]),t._v(" 克隆项目")]),t._v(" "),e("p",[e("code",[t._v("git config user.name name")]),t._v(" 设置开发人员名称")]),t._v(" "),e("p",[e("code",[t._v("git add <directory>|<file>")]),t._v(" 暂存文件")]),t._v(" "),e("p",[e("code",[t._v('git commit -m "<message>"')]),t._v(" 提交暂存")]),t._v(" "),e("p",[e("code",[t._v("git status")])]),t._v(" "),e("h3",{attrs:{id:"git-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log"}},[t._v("#")]),t._v(" git log")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git log -<limit>")]),t._v(" eg: git log -1 展示最近一条提交信息")]),t._v(" "),e("li",[e("code",[t._v("git log --oneline")]),t._v(" 将每个提交压缩为一行展示")]),t._v(" "),e("li",[e("code",[t._v("git log -p")]),t._v(" 显示每个提交的完整差异")]),t._v(" "),e("li",[e("code",[t._v("git log --stat")]),t._v(" 显示简略提交信息")]),t._v(" "),e("li",[e("code",[t._v("git log --author <pattern>")]),t._v(" eg: "),e("code",[t._v("git log --author zhangyi")])]),t._v(" "),e("li",[e("code",[t._v("git log --grep <pattern>")]),t._v(" 搜索提交记录 eg: "),e("code",[t._v("git log --grep chore")])]),t._v(" "),e("li",[e("code",[t._v("git log -- <file>")]),t._v(" 文件提交记录")])]),t._v(" "),e("h3",{attrs:{id:"git-reflog-显示本地存储库-head-的更改记录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog-显示本地存储库-head-的更改记录"}},[t._v("#")]),t._v(" git reflog 显示本地存储库 HEAD 的更改记录")]),t._v(" "),e("h3",{attrs:{id:"git-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-diff"}},[t._v("#")]),t._v(" git diff")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git diff")]),t._v(" 工作区与暂存区比较")]),t._v(" "),e("li",[e("code",[t._v("git diff --cached <path>")]),t._v(" 暂存区与最近一次提交比较")]),t._v(" "),e("li",[e("code",[t._v("git diff HEAD <path>")]),t._v(" 工作区与最近一次提交比较")]),t._v(" "),e("li",[e("code",[t._v("git diff commit-id <path>")]),t._v(" 工作区与指定提交比较")]),t._v(" "),e("li",[e("code",[t._v("git diff --cached commit-id <path>")]),t._v(" 暂存区与指定提交比较")]),t._v(" "),e("li",[e("code",[t._v("git diff commit-id1 commit-id2")]),t._v(" 两次提交比较")]),t._v(" "),e("li",[e("code",[t._v("git diff > <patch>")]),t._v(" 打补丁 eg: "),e("code",[t._v("git diff --cached > diff.txt")]),t._v(" 暂存区与版本库的差异做成补丁输出到文件 diff.txt")])]),t._v(" "),e("h2",{attrs:{id:"undoing-changes-撤消更改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#undoing-changes-撤消更改"}},[t._v("#")]),t._v(" undoing changes 撤消更改")]),t._v(" "),e("h3",{attrs:{id:"git-revert-撤销"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-revert-撤销"}},[t._v("#")]),t._v(" git revert 撤销")]),t._v(" "),e("p",[t._v("git revert 用一次新的提交来回滚之前的提交，版本会递增，不影响之前提交的内容")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git revert HEAD")]),t._v(" 撤销前一次提交")]),t._v(" "),e("li",[e("code",[t._v("git revert HEAD^")]),t._v(" 撤销前前一次提交")]),t._v(" "),e("li",[e("code",[t._v("git revert commit-id")]),t._v(" 撤销指定版本,撤销也会作为一次提交保存")])]),t._v(" "),e("h3",{attrs:{id:"git-reset-版本回退"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-reset-版本回退"}},[t._v("#")]),t._v(" git reset 版本回退")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git reset --hard HEAD|commit-id")]),t._v(" 版本回退 并删除版本内容")]),t._v(" "),e("li",[e("code",[t._v("git reset --soft HEAD|commit-id")]),t._v(" 版本回退 版本内容回退到暂存区")]),t._v(" "),e("li",[e("code",[t._v("git reset HEAD|commit-id")]),t._v(" 版本回退 版本内容回退到工作区")])]),t._v(" "),e("h3",{attrs:{id:"git-clean"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-clean"}},[t._v("#")]),t._v(" git clean")]),t._v(" "),e("p",[t._v("批量删除 branch 中新加的文件(untracked files) 未跟踪的文件 ; 删除前 加上 命令 n 防止误删除")]),t._v(" "),e("ul",[e("li",[t._v("n")]),t._v(" "),e("li",[t._v("f 文件")]),t._v(" "),e("li",[t._v("d 目录")]),t._v(" "),e("li",[t._v("x gitignore 的文件")])]),t._v(" "),e("h2",{attrs:{id:"additional-options-其他选项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#additional-options-其他选项"}},[t._v("#")]),t._v(" additional options 其他选项")]),t._v(" "),e("p",[t._v("eg: "),e("code",[t._v("git config --global --list")])]),t._v(" "),e("h2",{attrs:{id:"rewriting-git-history-重写-git-历史"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rewriting-git-history-重写-git-历史"}},[t._v("#")]),t._v(" rewriting git history 重写 git 历史")]),t._v(" "),e("h3",{attrs:{id:"git-commit-amend-编辑最后一次提交"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-commit-amend-编辑最后一次提交"}},[t._v("#")]),t._v(" git commit --amend 编辑最后一次提交")]),t._v(" "),e("p",[e("code",[t._v("git commit --amend --no-edit")]),t._v(" 编辑最后一次提交信息")]),t._v(" "),e("p",[t._v("适用场景:修改了一个笔误或添加了一个忘记暂存的文件 (将需要更改或新增的文件加入暂存区即可)")]),t._v(" "),e("h3",{attrs:{id:"git-rebase-不要合并已提交到远程分支的-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-不要合并已提交到远程分支的-commit"}},[t._v("#")]),t._v(" git rebase （不要合并已提交到远程分支的 commit）")]),t._v(" "),e("p",[t._v("功能:")]),t._v(" "),e("ul",[e("li",[t._v("合并 commit")]),t._v(" "),e("li",[t._v("将某一段 commit 粘贴到另一个分支上")])]),t._v(" "),e("p",[e("code",[t._v("git rebase -i HEAD~4")]),t._v(" 合并最近四次提交")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("pick：保留该 commit（缩写:p）")])]),t._v(" "),e("li",[e("p",[t._v("reword：保留该 commit，但我需要修改该 commit 的注释（缩写:r）")])]),t._v(" "),e("li",[e("p",[t._v("edit：保留该 commit, 但我要停下来修改该提交(不仅仅修改注释)（缩写:e）")])]),t._v(" "),e("li",[e("p",[t._v("squash：将该 commit 和前一个 commit 合并（缩写:s）")])]),t._v(" "),e("li",[e("p",[t._v("fixup：将该 commit 和前一个 commit 合并，但我不要保留该提交的注释信息（缩写:f）")])]),t._v(" "),e("li",[e("p",[t._v("exec：执行 shell 命令（缩写:x）")])]),t._v(" "),e("li",[e("p",[t._v("drop：我要丢弃该 commit（缩写:d）")])]),t._v(" "),e("li",[e("p",[t._v("异常退出 "),e("code",[t._v("git rebase --edit-todo")]),t._v(" 恢复")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("git rebase --continue")])])])]),t._v(" "),e("p",[t._v("可参考文章")]),t._v(" "),e("ul",[e("li",[e("a-input",{attrs:{value:"https://www.jianshu.com/p/4a8f4af4e803"}})],1),t._v(" "),e("li",[e("a-input",{attrs:{value:"http://jartto.wang/2018/12/11/git-rebase"}})],1)]),t._v(" "),e("h2",{attrs:{id:"git-branches-分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-branches-分支"}},[t._v("#")]),t._v(" git branches 分支")]),t._v(" "),e("h3",{attrs:{id:"git-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-branch"}},[t._v("#")]),t._v(" git branch")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git branch")]),t._v(" 列出本地分支")]),t._v(" "),e("li",[e("code",[t._v("git branch <branch>")]),t._v(" 创建分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -d <branch>")]),t._v(" 删除分支")])]),t._v(" "),e("h3",{attrs:{id:"git-checkout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-checkout"}},[t._v("#")]),t._v(" git checkout")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git checkout <branch>")]),t._v(" 切换分支")]),t._v(" "),e("li",[e("code",[t._v("git checkout -b <branch>")]),t._v(" 切换并创建")])]),t._v(" "),e("h3",{attrs:{id:"git-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge"}},[t._v("#")]),t._v(" git merge")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 工作流\n1.git pull  (或fetch && merge)\n2.编辑冲突文件\n3.git pull\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h4",{attrs:{id:"fast-forward-快速合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fast-forward-快速合并"}},[t._v("#")]),t._v(" fast-forward 快速合并")]),t._v(" "),e("p",[e("code",[t._v("git merge <branch>")])]),t._v(" "),e("h4",{attrs:{id:"no-ff-非快速合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-ff-非快速合并"}},[t._v("#")]),t._v(" no-ff 非快速合并")]),t._v(" "),e("p",[e("code",[t._v("git merge --no-ff <branch>")])]),t._v(" "),e("h4",{attrs:{id:"squash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#squash"}},[t._v("#")]),t._v(" squash")]),t._v(" "),e("h4",{attrs:{id:"git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[t._v("#")]),t._v(" git rebase")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("# 工作流\ngit rebase\nwhile(存在冲突) {\n    git status\n    找到当前冲突文件，编辑解决冲突\n    git add -u\n    git rebase --continue\n    if( git rebase --abort )\n        break;\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h4",{attrs:{id:"合并分支的方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并分支的方法"}},[t._v("#")]),t._v(" 合并分支的方法")]),t._v(" "),e("ul",[e("li",[t._v("merge")]),t._v(" "),e("li",[t._v("cherry-pick")]),t._v(" "),e("li",[t._v("rebase")])]),t._v(" "),e("h2",{attrs:{id:"remote-repositories-远程存储库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remote-repositories-远程存储库"}},[t._v("#")]),t._v(" remote repositories 远程存储库")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git remote add <name> <url>")])]),t._v(" "),e("li",[e("code",[t._v("git fetch <remote> <branch>")])]),t._v(" "),e("li",[e("code",[t._v("git pull <remote>")])]),t._v(" "),e("li",[e("code",[t._v("git push <remote> <branch>")])])]),t._v(" "),e("h2",{attrs:{id:"git-pull"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-pull"}},[t._v("#")]),t._v(" git pull")]),t._v(" "),e("p",[e("code",[t._v("git pull --rebase <remote>")])]),t._v(" "),e("h2",{attrs:{id:"git-push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-push"}},[t._v("#")]),t._v(" git push")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git push <remote> --force")])]),t._v(" "),e("li",[e("code",[t._v("git push <remote> --all")])]),t._v(" "),e("li",[e("code",[t._v("git push <remote> --tags")])])]),t._v(" "),e("h2",{attrs:{id:"git-cherry-pick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-cherry-pick"}},[t._v("#")]),t._v(" git cherry-pick")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git cherry-pick <branch>")]),t._v(" 将 branch 分支最新一次提交,转移到当前分支")]),t._v(" "),e("li",[e("code",[t._v("git cherry-pick commit_id")]),t._v(" 将该次提交,转移到当前分支")])])])}),[],!1,null,null,null);i.default=r.exports}}]);